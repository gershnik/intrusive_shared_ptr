name: Test

on: 
  push:
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'doc/**'
      - 'tools/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
        - os: windows-latest
        - os: ubuntu-latest
          compiler: gcc
          version: 11
        - os: ubuntu-latest
          compiler: gcc
          version: 12
        - os: ubuntu-latest
          compiler: gcc
          version: 13
        - os: ubuntu-latest
          compiler: clang
          version: 13
        - os: ubuntu-latest
          compiler: clang
          version: 14
        - os: ubuntu-latest
          compiler: clang
          version: 15
        - os: ubuntu-latest
          compiler: clang
          version: 16
        - os: ubuntu-latest
          compiler: clang
          version: 17

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: System Setup
      shell: bash
      run: |
        if [[ '${{ matrix.os }}' == 'ubuntu-latest' ]]; then
          if [[ '${{ matrix.compiler }}' == 'clang' ]]; then
            wget https://apt.llvm.org/llvm.sh
            chmod u+x llvm.sh
            sudo ./llvm.sh ${{ matrix.version }}
            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
          fi

          if [[ '${{ matrix.compiler }}' == 'gcc' ]]; then
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update
            sudo apt-get install -y gcc-${{ matrix.version }} g++-${{ matrix.version }}
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          fi
        fi

    - name: Configure
      shell: bash
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 

    - name: Build and Test
      shell: bash
      run: |
        cmake --build build --config Release --target run-test

